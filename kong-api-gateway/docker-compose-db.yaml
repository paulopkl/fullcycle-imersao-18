version: "3.8"

services:
  kong:
    depends_on:
      - kong-migrations
    image: kong:3.7
    restart: on-failure:10
    ports:
      - 8000:8000
      - 8001:8001
      - 8002:8002
      - 8003:8003
      - 8004:8004
      - 8443:8443
      - 8444:8444
      - 8445:8445
    environment:
      # Database
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong

      # Logs
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr

      # URL
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002

      # KONG_CASSANDRA_CONTACT_POINTS: kong-db
    # extra_hosts:
    #   - host.docker.internal:host-gateway
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - kong-api

  kong-db:
    # hostname: kong-db
    # network_mode: "host"
    image: postgres:16.3-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "kong", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    # network_mode: "host"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - kong-api

  kong-migrations:
    depends_on:
      kong-db:
        condition: service_healthy
    image: kong:3.7
    command: kong migrations bootstrap --vv
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      # KONG_CASSANDRA_CONTACT_POINTS: kong-db
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - kong-api

networks:
  kong-api:
    # driver: bridge
